// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PFA.Library.Services;

#nullable disable

namespace PFA.Library.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230506183853_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PFA.Library.Models.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MatiereId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MatiereId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("PFA.Library.Models.ExamEtudiant", b =>
                {
                    b.Property<int?>("EtudiantId")
                        .HasColumnType("int");

                    b.Property<int?>("ExamId")
                        .HasColumnType("int");

                    b.Property<int?>("SalleId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Table")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EtudiantId", "ExamId");

                    b.HasIndex("ExamId");

                    b.HasIndex("SalleId");

                    b.ToTable("ExamEtudiant");
                });

            modelBuilder.Entity("PFA.Library.Models.Filiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Filieres");
                });

            modelBuilder.Entity("PFA.Library.Models.Matiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MyProperty")
                        .HasColumnType("int");

                    b.Property<int?>("SemestreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SemestreId");

                    b.ToTable("Matieres");
                });

            modelBuilder.Entity("PFA.Library.Models.Salle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Salles");
                });

            modelBuilder.Entity("PFA.Library.Models.Semestre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FiliereId")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FiliereId");

                    b.ToTable("Semestres");
                });

            modelBuilder.Entity("PFA.Library.Models.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Utilisateurs");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Utilisateur");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("PFA.Library.Models.Etudiant", b =>
                {
                    b.HasBaseType("PFA.Library.Models.Utilisateur");

                    b.Property<string>("CNE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("N_Apo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Etudiant");
                });

            modelBuilder.Entity("PFA.Library.Models.Professeur", b =>
                {
                    b.HasBaseType("PFA.Library.Models.Utilisateur");

                    b.HasDiscriminator().HasValue("Professeur");
                });

            modelBuilder.Entity("PFA.Library.Models.ResponsableExam", b =>
                {
                    b.HasBaseType("PFA.Library.Models.Utilisateur");

                    b.HasDiscriminator().HasValue("ResponsableExam");
                });

            modelBuilder.Entity("PFA.Library.Models.Surveillant", b =>
                {
                    b.HasBaseType("PFA.Library.Models.Utilisateur");

                    b.HasDiscriminator().HasValue("Surveillant");
                });

            modelBuilder.Entity("PFA.Library.Models.Exam", b =>
                {
                    b.HasOne("PFA.Library.Models.Matiere", "Matiere")
                        .WithMany("Exams")
                        .HasForeignKey("MatiereId");

                    b.Navigation("Matiere");
                });

            modelBuilder.Entity("PFA.Library.Models.ExamEtudiant", b =>
                {
                    b.HasOne("PFA.Library.Models.Etudiant", "Etudiant")
                        .WithMany("ExamEtudiants")
                        .HasForeignKey("EtudiantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PFA.Library.Models.Exam", "Exam")
                        .WithMany("ExamEtudiants")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PFA.Library.Models.Salle", "Salle")
                        .WithMany()
                        .HasForeignKey("SalleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etudiant");

                    b.Navigation("Exam");

                    b.Navigation("Salle");
                });

            modelBuilder.Entity("PFA.Library.Models.Matiere", b =>
                {
                    b.HasOne("PFA.Library.Models.Semestre", "Semestre")
                        .WithMany("Matieres")
                        .HasForeignKey("SemestreId");

                    b.Navigation("Semestre");
                });

            modelBuilder.Entity("PFA.Library.Models.Semestre", b =>
                {
                    b.HasOne("PFA.Library.Models.Filiere", "Filiere")
                        .WithMany("Semestres")
                        .HasForeignKey("FiliereId");

                    b.Navigation("Filiere");
                });

            modelBuilder.Entity("PFA.Library.Models.Exam", b =>
                {
                    b.Navigation("ExamEtudiants");
                });

            modelBuilder.Entity("PFA.Library.Models.Filiere", b =>
                {
                    b.Navigation("Semestres");
                });

            modelBuilder.Entity("PFA.Library.Models.Matiere", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("PFA.Library.Models.Semestre", b =>
                {
                    b.Navigation("Matieres");
                });

            modelBuilder.Entity("PFA.Library.Models.Etudiant", b =>
                {
                    b.Navigation("ExamEtudiants");
                });
#pragma warning restore 612, 618
        }
    }
}
